generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model orders {
  id   String @id @default(cuid())
  json Json
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id       String    @id @default(cuid())
  name     String?
  email    String?   @unique
  image    String?
  password String?
  role     UserRole  @default(USER)
  accounts Account[]
  keys     Key[]
  Order    Order[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Key {
  id         String    @id @default(cuid())
  key1       String
  key2       String
  productId  String
  customerId String?
  customer   User?     @relation(fields: [customerId], references: [id])
  Order      Order?    @relation(fields: [orderId], references: [id])
  orderId    String?
}

model Order {
  id          String   @id @default(cuid())
  orderNumber Int
  customerId  String
  customer    User     @relation(fields: [customerId], references: [id])
  keys        Key[]
  createdAt   DateTime @default(now())
}
